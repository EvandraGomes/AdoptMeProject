# Relatório do Projeto de Desenvolvimento de uma Aplicação Móvel para Adoção de Animais e Doação de Bens

**EI/D01/2º ano/Grupo 2:**

1. Evandra Gomes - 20230416  
2. Silana Naval - 20230306

Lisboa, 13 de Janeiro de 2025  
Universidade Europeia - IADE

---

## 1. Introdução

O projeto AdoptMe é uma aplicação móvel voltada para facilitar o processo de adoção de animais e a doação de bens para organizações que cuidam de animais. A ideia surgiu da necessidade de tornar o processo de adoção mais acessível, ágil e organizado, enquanto incentiva e facilita as doações de itens essenciais ao bem-estar dos animais, como ração, brinquedos, mantas e medicamentos.

---

## 2. Contexto e Justificativa

O aumento do número de animais abandonados e a falta de recursos para cuidar deles são problemas que afetam diversas comunidades em Portugal. ONGs e abrigos dependem de doações para manter seus serviços, mas a ausência de plataformas centralizadas e intuitivas dificulta esse processo. O crescimento do uso de smartphones e o hábito de realizar tarefas diárias por meio de aplicativos tornam uma solução digital uma resposta ideal para esses problemas. Aplicações móveis são ferramentas poderosas para engajar o público e promover a adoção de animais, além de oferecer comunicação direta e acessível.

---

## 3. Objetivos do Projeto

Os principais objetivos do projeto AdoptMe são:

- **Facilitar a adoção de animais:** Proporcionar uma interface intuitiva onde os usuários possam buscar e adotar animais de forma organizada.
- **Incentivar doações:** Permitir que os usuários doem bens com transparência e praticidade.
- **Promover a adoção responsável:** Garantir o acompanhamento do processo de adoção, fornecendo atualizações sobre a saúde dos animais.
- **Fortalecer a comunicação entre organizações e usuários:** Oferecer canais de comunicação direta, como agendamentos via WhatsApp.
- **Ampliar o alcance da adoção e doação:** Utilizar uma plataforma digital para impactar um público maior.

---

## 4. Estrutura da API

Inicialmente, a nossa API consistia apenas em **Modelos**, **Controladores** e **Repositórios**. Durante o desenvolvimento, adicionamos uma camada de **Serviços (Service)**, que serve como intermediário entre os repositórios e os controladores, organizando a lógica de negócios e tornando o código mais modular e fácil de manter.

### Função das Estruturas:

- **Modelos (Models):** Representam as entidades do sistema, como Usuários, Animais e Doações. Cada modelo reflete uma tabela na base de dados.
- **Repositórios (Repositories):** Responsáveis pela interação direta com a base de dados, executando operações CRUD (Create, Read, Update, Delete).
- **Serviços (Services):** Contêm a lógica de negócios e servem como ponte entre os repositórios e os controladores, promovendo a separação de responsabilidades.
- **Controladores (Controllers):** Gerenciam as requisições HTTP e definem os endpoints acessíveis pela aplicação.

---

## 5. Decisões de Projeto

Optamos por não avançar com algumas funcionalidades inicialmente previstas devido à complexidade e ao curto tempo disponível. Entre as funcionalidades retiradas estão:

- **Postagens e Comentários:** Decidimos não implementar essas funcionalidades, focando em recursos essenciais.
- **Notificações:** Ficaram de fora do escopo final.
- **Doações Monetárias:** Não foram implementadas devido à complexidade envolvendo métodos de pagamento e segurança.

Outro ponto relevante é que todas as relações entre tabelas foram implementadas diretamente no código utilizando o IntelliJ IDEA. Não utilizamos tabelas de ligação específicas na base de dados, mas sim atributos dentro das tabelas principais.

---

## 6. Métodos Utilizados

Os métodos principais implementados foram:

- **POST:** Utilizado para criar novos registros, como adicionar novos animais ou usuários.
- **GET:** Permite a recuperação de dados, como listar animais disponíveis para adoção.
- **PUT:** Atualiza registros existentes, como modificar o status de um animal.

---

## 7. Utilização de Token

Durante os testes com o Postman, utilizamos **tokens** para autenticação, garantindo a segurança das operações, especialmente nas funcionalidades de **User**, **Favorite**, **Loc** e **Status**.

---

## 8. Funcionalidades da Aplicação

### Modelo 1 - Informações sobre Animais

- **Atributos:**
  - `ani_id`: Identificador único do animal
  - `ani_name`: Nome do animal
  - `ani_birthdate`: Data de nascimento
  - `ani_gender`: Género (M/F)
  - `ani_description`: Descrição detalhada
  - `ani_breed`: Raça
  - `ani_type`: Tipo (Cão, Gato, etc.)
  - `ani_image`: URL da imagem

---

### Modelo 2 - Informações do Usuário

- **Atributos:**
  - `usr_id`: Identificador único
  - `usr_name`: Nome
  - `usr_email`: E-mail
  - `usr_password`: Senha criptografada
  - `usr_date_registered`: Data de registro
  - `usr_image`: URL da foto de perfil

---

### Modelo 3 - Status de Adoção

- **Atributos:**
  - `sta_id`: Identificador único
  - `sta_ani_id`: Identificador do animal
  - `sta_first_visit`: Primeira visita realizada (flag)
  - `sta_adopter_evaluation`: Avaliação do adotante
  - `sta_documentation`: Documentação concluída (flag)
  - `sta_adaptation_period`: Período de adaptação
  - `sta_adoption_confirmed`: Adoção confirmada
  - `sta_follow_up`: Acompanhamento pós-adoção ativo
  - `sta_adopted`: Animal adotado (flag)
  - `sta_update_date`: Data da última atualização
  - `sta_event_schedule`: Data/hora de eventos futuros

---

### Modelo 4 - Doações

- **Atributos:**
  - `don_id`: Identificador único
  - `don_amount`: Valor da doação (se monetária)
  - `don_payment_method`: Método de pagamento (MBWay, Cartão, etc.)
  - `don_date`: Data da doação
  - `don_usr_id`: Identificador do doador
  - `don_typ_name`: Tipo de doação (Financeira, Alimentos, etc.)

---

### Modelo 5 - Marcações para Visitas

- **Atributos:**
  - `visit_id`: Identificador único
  - `visit_usr_id`: Identificador do usuário
  - `visit_ani_id`: Identificador do animal
  - `visit_date`: Data da visita
  - `visit_time`: Hora da visita
  - `visit_status`: Status (Visita realizada)

---

### Modelo 6 - Lista de Favoritos

- **Atributos:**
  - `fav_id`: Identificador único
  - `fav_usr_id`: Identificador do usuário
  - `fav_ani_id`: Identificador do animal
  - `fav_date`: Data da marcação
  - `fav_usr_name`: Nome do usuário
  - `fav_ani_name`: Nome do animal

---

## 9. Conclusão

O projeto AdoptMe foi desenvolvido com foco em funcionalidades essenciais que atendem à necessidade de facilitar o processo de adoção e doação de bens. Com a implementação finalizada, o sistema está pronto para ser utilizado por organizações e usuários, promovendo um impacto positivo na vida dos animais. O resultado reflete o compromisso e a dedicação da equipe em oferecer uma solução funcional e prática, contribuindo para a causa animal.


## 10. Modelo de Domínio 

![MER_BD](https://github.com/user-attachments/assets/817785e9-4832-46aa-94ce-96af18989eb2)

## 11. Diagrama de classes

![Diagrama de Classes](https://github.com/user-attachments/assets/9989a089-6f68-4e94-8114-a5f6be2ebe50)
